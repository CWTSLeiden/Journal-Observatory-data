insert {
    graph ?graph {
        ?record dcterms:identifier ?journal .
    }
}
where {
    graph ?graph {
        ?record a rdfg:Graph .
        ?record stm:metadata ?metadata .
        optional { ?metadata prism:issn ?pissn . }
        optional { ?metadata prism:eIssn ?eissn . }
        optional { ?metadata fabio:hasIssnL ?lissn . }
        bind(iri(concat("https://issn.org/", coalesce(?lissn, ?pissn, ?eissn))) as ?journal)
    }
}

# Jobmap
insert {
    graph sub:head {
        this: a ppo:PAD ;
            ppo:hasAssertion sub:assertion ;
            ppo:hasProvenance sub:provenance .
    }

    graph sub:provenance {
        sub:assertion cc:license ?license ;
            dcterms:created ?date ;
            dcterms:creator ?creator .
    }
}
where {
    ?record a rdfg:Graph .
    ?record ppo:provenance ?provenance .
    ?provenance dcterms:created ?date ;
        dcterms:creator ?creator ;
        cc:license ?license .
}

# Metadata
insert {
    graph sub:assertion {
        ?journal a ppo:Platform ;
            schema:name ?name ;
            ppo:hasPublisher ?publisher ;
            ?hasissn ?issn .
    }
}
where {
    ?record a rdfg:Graph .
    ?record dcterms:identifier ?journal .
    ?record stm:metadata ?metadata .
    optional { ?metadata schema:name ?name } .
    optional { ?metadata ppo:hasPublisher ?publisher } .
    optional { ?metadata ?hasissn ?issn . 
        filter ( ?hasissn in (prism:issn, prism:eIssn, fabio:hasIssnL) )
    } .
}

# Evaluation Policy
insert {
    graph sub:assertion {
        ?journal a ppo:Platform ;
            ppo:hasPolicy ?policy .

        ?policy a ppo:EvaluationPolicy ;
            stm:postPublicationCommenting ?ppc_value .

        ?policy ppo:involves ?authorrole .
        ?authorrole a pro:Author ;
            ?author_an_reviewer ?reviewerrole ;
            ?author_an_curator ?curatorrole .

        ?policy ppo:involves ?reviewerrole .
        ?reviewerrole a pro:peer-reviewer ;
            ppo:identityPublished ?reviewer_published ;
            ppo:identityPublished ?reviewer_published_reviewer ;
            ?reviewer_an_author ?authorrole ;
            ?reviewer_an_curator ?curatorrole ;
            ?riw_author ?authorrole ;
            ?riw_curator ?curatorrole ;
            ?riw_reviewer ?reviewerrole .

        ?policy ppo:involves ?curatorrole .
        ?curatorrole a ppo:Editor .
        ?curatorrole ppo:identityPublished ?editor_published_p .

        ?reviewreport a ppo:PeerReviewReport .
        ?policy ppo:covers ?reviewreport .
        ?reviewreport ppo:isPublished ?rr_published .
        ?reviewreport ppo:isPublished ?rr_published_author .
        ?reviewreport ppo:isPublished ?rr_published_reviewer .

        ?submittedmanuscript a ppo:SubmittedManuscript .
        ?policy ppo:covers ?submittedmanuscript .
        ?submittedmanuscript ppo:isPublished ?sm_published .
        ?submittedmanuscript ppo:isPublished ?sm_published_author .

        ?reviewsummaries a ppo:ReviewSummaries .
        ?policy ppo:covers ?reviewsummaries .
        ?reviewsummaries ppo:isPublished ?rs_published_p .

        ?authoreditorcommunication a stm:AuthorEditorCommunication .
        ?policy ppo:covers ?authoreditorcommunication .
        ?authoreditorcommunication ppo:isPublished ?aec_published_p .
    }
}
where {
    ?record a rdfg:Graph .
    ?record dcterms:identifier ?journal .

    # bind named individuals for convenience
    bind(sub:evaluationPolicy as ?policy) .
    bind(sub:author as ?authorrole) .
    bind(sub:reviewer as ?reviewerrole) .
    bind(sub:curator as ?curatorrole) .
    
    optional { ?record stm:identityTransparency ?id . }
    optional { ?id stm:singleAnonymised true .
        bind(ppo:anonymousTo as ?reviewer_an_author) .
        bind(ppo:identifiedTo as ?author_an_reviewer) .
        bind(ppo:identifiedTo as ?reviewer_an_curator) .
        bind(ppo:identifiedTo as ?author_an_curator) .
    }
    optional { ?id stm:doubleAnonymised true .
        bind(ppo:anonymousTo as ?reviewer_an_author) .
        bind(ppo:anonymousTo as ?author_an_reviewer) .
        bind(ppo:identifiedTo as ?reviewer_an_curator) .
        bind(ppo:identifiedTo as ?author_an_curator) .
    }
    optional { ?id stm:tripleAnonymised true .
        bind(ppo:anonymousTo as ?reviewer_an_author) .
        bind(ppo:anonymousTo as ?author_an_reviewer) .
        bind(ppo:anonymousTo as ?reviewer_an_curator) .
        bind(ppo:anonymousTo as ?author_an_curator) .
    }
    optional { ?id stm:allIdentitiesVisible true .
        bind(ppo:identifiedTo as ?reviewer_an_author) .
        bind(ppo:identifiedTo as ?author_an_reviewer) .
        bind(ppo:identifiedTo as ?reviewer_an_curator) .
        bind(ppo:identifiedTo as ?author_an_curator) .
    }

    optional { ?record stm:postPublicationCommenting ?ppc . }
    optional { ?ppc stm:onInvitation true . bind("On invitation" as ?ppc_value) }
    optional { ?ppc stm:open true . bind("Open" as ?ppc_value) }

    optional { ?record stm:reviewerInteractsWith ?riw . }
    optional { ?riw stm:authors true .
        bind(stm:interactsWith as ?riw_author) .
    }
    optional { ?riw stm:editor true .
        bind(stm:interactsWith as ?riw_curator) .
    }
    optional { ?riw stm:otherReviewers true .
        bind(stm:reviewerInteractsWith as ?riw_reviewer) .
    }

    optional { ?record stm:reviewInformationPublished ?rip . }
    optional {
        ?rip stm:authorEditorCommunication ?aec_published_p . 
        bind(sub:authorEditorCommunication as ?authoreditorcommunication)
    }
    optional {
        ?rip stm:reviewReports ?rr_published_p .
        ?rip stm:reviewReportsAuthorOptIn ?rr_published_author_p .
        ?rip stm:reviewReportsReviewerOptIn ?rr_published_reviewer_p .
        bind(sub:reviewReport as ?reviewreport)
        bind(if(?rr_published_p=true && ?rr_published_author_p=false && ?rr_published_reviewer_p=false, true, ?_) as ?rr_published).
        bind(if(?rr_published_p=false && ?rr_published_author_p=false && ?rr_published_reviewer_p=false, true, ?_) as ?rr_published).
        bind(if(?rr_published_author_p, "Author Opt-In", ?_) as ?rr_published_author) .
        bind(if(?rr_published_reviewer_p, "Reviewer Opt-In", ?_) as ?rr_published_reviewer) .
    }
    optional {
        ?rip stm:reviewSummaries ?rs_published_p .
        bind(sub:reviewSummaries as ?reviewsummaries)
    }
    optional {
        ?rip stm:submittedManuscripts ?sm_published_p .
        ?rip stm:submittedManuscriptsAuthorOptIn ?sm_published_author_p .
        bind(sub:submittedManuscript as ?submittedmanuscript)
        bind(if(?sm_published_p=true && ?sm_published_author_p=false, true, ?_) as ?sm_published) .
        bind(if(?sm_published_p=false && ?sm_published_author_p=false, false, ?_) as ?sm_published) .
        bind(if(?sm_published_author_p, "Author Opt-In", ?_) as ?sm_published_author) .
    }
    optional {
        ?rip stm:reviewerIdentities ?reviewer_published_p .
        ?rip stm:reviewerIdentitiesReviewerOptIn ?reviewer_published_reviewer_p .
        bind(if(?reviewer_published_p=true && ?reviewer_published_reviewer_p=false, true, ?_) as ?reviewer_published) .
        bind(if(?reviewer_published_p=false && ?reviewer_published_reviewer_p=false, false, ?_) as ?reviewer_published) .
        bind(if(?reviewer_published_reviewer_p, "Reviewer Opt-In", ?_) as ?reviewer_published_reviewer) .
    }
    optional { ?rip stm:editorIdentities ?editor_published_p . }
}
