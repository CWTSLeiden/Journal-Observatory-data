construct {
    this: a job:JobMap ;
        job:hasDataLicense <https://creativecommons.org/licenses/by-nc-nd/4.0>;
        job:hasCreationDate ?date ;
        job:hasDatasource <https://v2.sherpa.ac.uk/romeo> ;
        job:hasAssertion sub:metadata ;
        job:hasAssertion sub:publisher ;
        job:hasAssertion sub:identifier ;
        job:hasAssertion sub:policy .

    sub:metadata a job:MetadataAssertion ;
        schema:name ?journal_title ;
        schema:url ?journal_url .

    sub:publisher a job:PublisherAssertion ;
        job:hasPublisher ?_publisher .
    ?_publisher schema:name ?publisher_name ;
        schema:addressCountry ?publisher_country ;
        schema:url ?publisher_url .
        
    sub:identifier a job:IdentifierAssertion ;
        fabio:issn ?pissn ;
        fabio:eIssn ?eissn ;
        romeo:id ?romeo_id .

    sub:policy a job:OpenAccessPolicyAssertion ;
        job:hasPolicy ?_oa_policy .
    ?_oa_policy
        job:hasLicense ?license ;
        job:hasEmbargo ?oa_embargo ;
        job:hasPublishingLocation ?oa_location ;
        job:hasCondition ?oa_condition ;
        job:hasCopyrightOwner ?oa_copyright ;
        job:appliesToVersion ?oa_articleversion ;
        
}
where {
    ?journal romeo:hasMetadata ?romeo_id .
    ?romeo_id schema:dateCreated ?date .

    optional {
        ?journal romeo:hasPublisherPolicy ?publisher_policy .
        ?publisher_policy romeo:hasPermittedOA ?oa_policy .
        bind(bnode() as ?_oa_policy) .
        ?oa_policy romeo:articleVersion ?oa_articleversion .
    }

    optional {
        ?journal romeo:hasPublisher [ romeo:Publisher ?publisher ] .
        bind(bnode() as ?_publisher) .
    }
    optional { ?publisher schema:url ?publisher_url . }
    optional { ?publisher romeo:publisherCountry ?publisher_country . }
    optional { ?publisher romeo:hasPublisherName [ romeo:PublisherName ?publisher_name ] . }

    optional { ?oa_policy romeo:copyrightOwner ?oa_copyright } .
    optional { ?oa_policy romeo:condition ?oa_condition } .
    optional { ?oa_policy romeo:hasPermittedLocation [ romeo:PermittedLocation ?oa_location ] } .
    optional {
        ?oa_policy romeo:hasPermittedLicence [ romeo:PermittedLicence ?oa_licence ;
                                               romeo:PermittedLicenceVersion ?oa_licenceversion
                                             ] .
        bind(if(?oa_license in ("cc0", "cc_public_domain"), IRI(concat("https://creativecommons.org/publicdomain/zero/", coalesce(?oa_licenseversion, "1.0"))), ?_) as ?cc0)
        bind(if(?oa_license = "cc_by", IRI(concat("https://creativecommons.org/licences/by/", coalesce(?oa_licenseversion, "4.0"))), ?_) as ?cc_by)
        bind(if(?oa_license = "cc_by_nc", IRI(concat("https://creativecommons.org/licences/by-nc/", coalesce(?oa_licenseversion, "4.0"))), ?_) as ?cc_by)
        bind(if(?oa_license = "cc_by_nc_nd", IRI(concat("https://creativecommons.org/licences/by-nc-nd/", coalesce(?oa_licenseversion, "4.0"))), ?_) as ?cc_by)
        bind(if(?oa_license = "cc_by_nc_sa", IRI(concat("https://creativecommons.org/licences/by-nc-sa/", coalesce(?oa_licenseversion, "4.0"))), ?_) as ?cc_by)
        bind(if(?oa_license = "cc_by_nd", IRI(concat("https://creativecommons.org/licences/by-nd/", coalesce(?oa_licenseversion, "4.0"))), ?_) as ?cc_by)
        bind(if(?oa_license = "cc_by_sa", IRI(concat("https://creativecommons.org/licences/by-sa/", coalesce(?oa_licenseversion, "4.0"))), ?_) as ?cc_by)
        bind(coalesce(?cc0, ?cc_by, ?oa_license) as ?license)
    } .
    optional {
        ?oa_policy romeo:embargo [ romeo:embargoAmount ?oa_embargoamount ;
                                   romeo:embargoUnits ?oa_embargoamount ] .
        bind(strdt(concat("P", ?oa_embargoaumount, ucase(substr(?oa_embargoamount, 1))), xsd:duration) as ?oa_embargoduration)
    }
    optional { ?journal romeo:hasTitle [ romeo:title ?journal_title ] . }
    optional { ?journal schema:url [ romeo:title ?journal_url ] . }
    
    optional { ?journal romeo:hasIssns ?issns . }
    optional { ?issns schema:issn ?pissn ; romeo:issn_type "print" . }
    optional { ?issns schema:issn ?eissn ; romeo:issn_type "electronic" . }

}
