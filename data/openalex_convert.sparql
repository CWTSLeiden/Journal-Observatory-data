# Provenance
insert {
    graph sub:docinfo {
        this: a pad:PAD ;
            pad:hasProvenance sub:provenance ;
            pad:hasAssertion sub:assertion ;
            pad:hasDocInfo sub:docinfo .
    }

    graph sub:provenance {
        sub:assertion cc:license <https://creativecommons.org/publicdomain/zero/1.0/> ;
            dcterms:created ?date ;
            dcterms:creator <https://openalex.org> .
    }
}
where {
    ?journal a rdfg:Graph .
    ?journal schema:dateModified ?date .
}

# Metadata
insert {
    graph sub:assertion {
        ?journal a ppo:Platform ;
            schema:name ?name .
    }
}
where {
    ?journal a rdfg:Graph .
    ?journal openalex:name ?name .
}

# Organizations
insert {
    graph sub:assertion {
        ?journal ppo:hasOrganization ?publisher .
        ?publisher a pro:publisher ;
            schema:name ?publisher . 
        ?journal ppo:hasOrganization ?society .
        ?society a ppo:Society ;
            schema:name ?society_name .
    }
}
where {
    ?journal a rdfg:Graph .
    optional { ?journal openalex:publisher_name ?publisher_name
        bind(bnode() as ?publisher)
    } . 
    optional { ?journal openalex:society ?society .
        ?society schema:name ?society_name
    } .
}

# Identifier
insert {
    graph sub:assertion {
        ?journal ?idtype ?id .
        ?journal ppo:hasOpenalexId ?journal .
    }
}
where {
    ?journal a rdfg:Graph ;
        ?idtype ?id .
    bind(if(?idtype in (ppo:hasWikidataId, ppo:hasFatcatId), encode_for_uri(iri(?id)), ?id) as ?id) .
    filter (?idtype in (prism:issn, fabio:hasIssnL, ppo:hasWikidataId, ppo:hasFatcatId))
}

# Dissemination Policy
insert {
    graph sub:assertion {
        ?journal ppo:hasPolicy sub:disseminationPolicy .
        sub:disseminationPolicy a ppo:DisseminationPolicy ;
            ppo:hasAPC ?apc .
        
        ?apc a ppo:ArticlePublishingCharges ;
            ppo:apc ?apc_price ;
            schema:priceCurrency "USD" .
    }
}
where {
    ?journal a rdfg:Graph ;
        openalex:apc_usd ?apc_price .
    bind(bnode() as ?apc)
}
