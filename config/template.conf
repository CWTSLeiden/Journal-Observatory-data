# Template to be used to configure the JournalObservatory bulk/conversion application
# Configuration options without values have no default value but can be omitted
# Configuration options with values describe the default value

# Some configuration can be set by providing environment variables.
# Environment variables always take precedent over this configuration.

# [main]
# For api-endpoints that support it (openalex), identify yourself by e-mail.
# email = 

# Identify yourself as the creator of each PAD created by this repository.
# identifier = 

# Directory where the app is run
# Also the base of any relative paths defined in other sections
# Can also be set by environment variable APP_ROOT.
# root_dir = ./

# More verbose messaging
# verbose = false

# Run in debugging mode, changes some options. In particular, conversion
# is done by writing to APP_ROOT/test/ instead of to the sparql endpoint.
# debug = false

# [store]
# Query/Update endpoint to the sparql store
# Can also be set by environment variables APP_SPARQL_QUERY_ENDPOINT, APP_SPARQL_UPDATE_ENDPOINT
# query =
# update =

# Locations of the relevant ontologies.
# ppo_ontology = ontology/ppo_ontology.ttl
# pad_ontology = ontology/pad_framework.ttl

# Credentials to the update endpoint of the sparql store
# Can also be set by environment variables APP_SPARQL_USERNAME, APP_SPARQL_PASSWORD
# username = admin
# password = test

# implemented sources: doaj, sherpa_romeo, openalex, issnl, wikidata, publisher_peer_review
# [{datasource}]
# Remote location for the bulk data
# data_location = 

# If the datasource requires authentication, provide the key
# data_password =

# Location to save the bulk data
# data_path = data/{datasource}

# Compress the data into an archive after loading
# data_compress = false

# Location of the context and convert files to convert the data into PADs
# context_file = resources/{datasource}_context.json
# convert_file = resources/{datasource}_convert.sparql

# Maximum number of journals to process (for debugging)
# limit = 
# If [main].debug is true, provide an offset for the journal to be converted
# test_item =